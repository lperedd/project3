{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-03-03T20:28:45.700455Z", "invocation_id": "21de6ec8-1141-48a6-a24c-be14d009ac28", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:42.159386Z", "completed_at": "2024-03-03T20:28:42.258292Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:42.302576Z", "completed_at": "2024-03-03T20:28:43.411324Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.2960083484649658, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1c-0000-0001827e7b51"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_reference_data_src__countries", "compiled": true, "compiled_code": "with\n    source as (select * from acme_ecommerce.reference_data.countries),\n    final as (select ALPHA_2_COUNTRY_CODE as country_code, country, region from source where active_flag = true)\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_reference_data_src__countries"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:42.165270Z", "completed_at": "2024-03-03T20:28:42.260282Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:42.308576Z", "completed_at": "2024-03-03T20:28:43.420975Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.297597885131836, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1e-0000-0001827e6c15"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_reference_data_src__customers", "compiled": true, "compiled_code": "with\n    source as (select * from acme_ecommerce.reference_data.customers),\n    final as (\n        select\n            customer_code as customer_id ,\n            first_name as customer_first_name  ,\n            last_name as customer_last_name,\n            concat(first_name, ' ', last_name) as customer_name,\n            case\n                when\n                    regexp_like(\n                        email, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'\n                    )\n                then email\n                else 'NOT_A_VALID_EMAIL@example.com'  --all invalid email formats renamed to this one\n            end as customer_email_address,\n            country_id as country_code\n\n        from source\n    )\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_reference_data_src__customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:42.173324Z", "completed_at": "2024-03-03T20:28:42.262321Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:42.315579Z", "completed_at": "2024-03-03T20:28:43.443140Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.3160951137542725, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1c-0000-0001827e7b55"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_reference_data_src__products", "compiled": true, "compiled_code": "with\n    source as (select * from acme_ecommerce.reference_data.products),\n    final as (\n        select prod_id as product_id, prod_name as product_name, prod_cat as product_category from source\n    )\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_reference_data_src__products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:42.139079Z", "completed_at": "2024-03-03T20:28:42.256319Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:42.265561Z", "completed_at": "2024-03-03T20:28:43.474144Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3638637065887451, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1e-0000-0001827e6c19"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_product_inventory_src__product_inventories", "compiled": true, "compiled_code": "with\n    source as (select * from acme_ecommerce.product_inventories.inventory),\n    final as (\n        select\n            prod_id as product_id,\n            to_variant(to_date(stock_arrival_date, 'MM/DD/YY'))::date\n            as stock_arrival_date,\n            to_variant(to_date(stock_depleted_date, 'MM/DD/YY'))::date\n            as stock_depleted_date,\n            purchase_price\n\n        from source\n    )\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_product_inventory_src__product_inventories"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:43.449146Z", "completed_at": "2024-03-03T20:28:43.468144Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:43.480182Z", "completed_at": "2024-03-03T20:28:43.632140Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1969926357269287, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1c-0000-0001827e7b59"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_transactional_src__forecasts", "compiled": true, "compiled_code": "with\n    source as (select * from acme_ecommerce.reference_data.forecasts),\n    final as (\n        select\n            date_part(month, to_date(month, 'MM-YY')) as forecast_month,\n            date_part(year, to_date(month, 'MM-YY')) as forecast_year,\n            cast(TO_CHAR(TO_DATE(month, 'MM-YY'), 'YYYY-MM-DD') as date) AS forecast_date_month,\n            product as product_id,\n            forecast_sales,\n            forecast_profit\n        from source\n    )\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_transactional_src__forecasts"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:43.462143Z", "completed_at": "2024-03-03T20:28:43.478181Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:43.493145Z", "completed_at": "2024-03-03T20:28:43.667148Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2229623794555664, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1e-0000-0001827e6c1d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.stg_transactional_src__orders", "compiled": true, "compiled_code": "with\n    source1 as (select * from acme_ecommerce.transactional.orders_2024_q3),\n    source2 as (select * from acme_ecommerce.transactional.orders_2024_q3),\n    merged as (select * from source1 union all select * from source2),\n    final as (\n        select\n            transaction_date,\n            DATE_TRUNC('MONTH', transaction_date)  as transaction_date_month,\n            month(transaction_date) as transaction_month,\n            quarter(transaction_date) as transaction_quarter,\n            year(transaction_date) as transaction_year,\n            shipping_date as shipped_date,\n            month(shipping_date) as shipped_month,\n            quarter(shipping_date) as shipped_quarter,\n            year(shipping_date) as shipped_year,\n            transaction_id,\n            product_id,\n            customer_id,\n            quantity as order_quantity,\n            transaction_price_usd\n        from merged\n    )\n\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_staging.stg_transactional_src__orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:43.685147Z", "completed_at": "2024-03-03T20:28:43.705143Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:43.709146Z", "completed_at": "2024-03-03T20:28:44.966318Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.289168357849121, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1c-0000-0001827e7b5d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.ecommerce__actuals_vs_forecasts", "compiled": true, "compiled_code": "with\n    orders as (\n        select\n\n            transaction_date_month,\n            transaction_month,\n            transaction_quarter,\n            transaction_year,\n            product_id,\n            sum(order_quantity) as order_quantity,\n            sum(transaction_price_usd) as actual_sales,\n            sum(transaction_price_usd) / sum(order_quantity) as sell_price_per_unit\n        from  analytics.ANALYTICS_USER_staging.stg_transactional_src__orders\n        group by 1, 2, 3, 4, 5\n    ),\n    products as (\n        select product_id, product_name, product_category\n        from analytics.ANALYTICS_USER_staging.stg_reference_data_src__products\n    ),\n    inventory as (\n        select distinct product_id, avg(purchase_price) as net_cost_per_unit\n        from\n           analytics.ANALYTICS_USER_staging.stg_product_inventory_src__product_inventories\n        group by 1\n\n    ),\n    forecasts as (\n        select forecast_date_month, product_id, forecast_sales, forecast_profit\n        from  analytics.ANALYTICS_USER_staging.stg_transactional_src__forecasts\n\n    ),\n    merged as (\n        select\n            orders.*,\n            products.* exclude(product_id),\n            inventory.* exclude(product_id),\n            forecasts.* exclude(forecast_date_month, product_id)\n\n        from orders\n        left join products using (product_id)\n        left join inventory using (product_id)\n        left join\n            forecasts\n            on orders.transaction_date_month = forecasts.forecast_date_month\n\n            and orders.product_id = forecasts.product_id\n\n    ),\n    actual_profit as (\n        select\n            *,\n            (actual_sales) - ((net_cost_per_unit) * (order_quantity)) as actual_profit\n\n        from merged\n    ),\n    final as (\n        select\n            *,\n            lag(actual_profit) over (\n                partition by transaction_date_month, product_id\n                order by transaction_date_month asc\n            ) as actual_profit_last_month,\n            lag(forecast_profit) over (\n                partition by transaction_date_month, product_id\n                order by transaction_date_month asc\n            ) as forecast_profit_last_month,\n            lag(actual_sales) over (\n                partition by transaction_date_month, product_id\n                order by transaction_date_month asc\n            ) as actual_sales_last_month,\n\n            lag(forecast_sales) over (\n                partition by transaction_date_month, product_id\n                order by transaction_date_month asc\n            ) as forecast_sales_last_month\n\n        from actual_profit\n\n    )\nselect *\nfrom final", "relation_name": "analytics.ANALYTICS_USER_marts.ecommerce__actuals_vs_forecasts"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-03-03T20:28:43.694141Z", "completed_at": "2024-03-03T20:28:43.708146Z"}, {"name": "execute", "started_at": "2024-03-03T20:28:43.746141Z", "completed_at": "2024-03-03T20:28:45.030960Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3488194942474365, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b2bf6c-0000-cf1e-0000-0001827e6c21"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.acme_ecommerce.ecommerce__sales_by_customer", "compiled": true, "compiled_code": "with orders as (\n    select\n        transaction_date,\n        transaction_month,\n        transaction_quarter,\n        transaction_year,\n        shipped_date,\n        shipped_month,\n        shipped_quarter,\n        shipped_year,\n        customer_id,\n        product_id,\n        sum(order_quantity) as order_quantity,\n        sum(transaction_price_usd) as transaction_price_usd\n    from analytics.ANALYTICS_USER_staging.stg_transactional_src__orders\n    group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n),\nproducts as (\n    select\n        product_id,\n        product_name,\n        product_category\n    from analytics.ANALYTICS_USER_staging.stg_reference_data_src__products\n),\ncustomers as (\n    select distinct\n        customer_id,\n        customer_name,\n        country_code,\n        customer_email_address\n    from analytics.ANALYTICS_USER_staging.stg_reference_data_src__customers\n   where customer_email_address <> 'NOT_A_VALID_EMAIL@example.com' --Filter to remove invalid emails for Email Marketing\n   \n),\ncountries as (\n    select distinct\n        country_code, country, region \n    from analytics.ANALYTICS_USER_staging.stg_reference_data_src__countries\n   \n),\nmerged as (\n    select customers.*,\n    orders.* exclude(customer_id),\n    products.* exclude(product_id),\n    countries.* exclude (country_code)\n    from customers left join orders using (customer_id)\n    left join products using (product_id) left join countries using (country_code)\n),\nfinal as(\n    select * from merged\n    where product_id IS NOT NULL\n)\nselect * from final", "relation_name": "analytics.ANALYTICS_USER_marts.ecommerce__sales_by_customer"}], "elapsed_time": 5.96527099609375, "args": {"indirect_selection": "eager", "which": "run", "strict_mode": false, "show_resource_report": false, "profiles_dir": "C:\\Users\\luism\\Desktop\\data\\github_repos\\sliide", "log_level_file": "debug", "introspect": true, "version_check": true, "target": "prod", "partial_parse_file_diff": true, "project_dir": "C:\\Users\\luism\\Desktop\\data\\github_repos\\sliide", "quiet": false, "exclude": [], "use_colors": true, "print": true, "favor_state": false, "log_file_max_bytes": 10485760, "log_format_file": "debug", "macro_debugging": false, "cache_selected_only": false, "select": [], "log_level": "info", "use_colors_file": true, "populate_cache": true, "log_path": "C:\\Users\\luism\\Desktop\\data\\github_repos\\sliide\\logs", "warn_error_options": {"include": [], "exclude": []}, "enable_legacy_logger": false, "defer": false, "send_anonymous_usage_stats": false, "log_format": "default", "vars": {}, "static_parser": true, "write_json": true, "printer_width": 80, "invocation_command": "dbt run --target prod", "partial_parse": true}}